# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Recipe {
  id: ID!
  title: String!
  description: String
  creationDate: DateTime!
  ingredients: [String!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Comment {
  id: Int!
  content: String!
}

type Post {
  id: Int!
  title: String!
  votes: Int
}

type Author {
  id: Int!
  firstName: String
  lastName: String
  posts: [Post]!
}

type Human implements Character {
  id: ID!
  name: String!
}

interface Character {
  id: ID!
  name: String!
}

type Query {
  findAllRecipe: [Recipe!]!
  recipe(id: String!): Recipe!
  recipes(offset: Int = 0, limit: Int = 10, skip: Int = 0, take: Int = 25): [Recipe!]!
  authors: [Author!]!
  author(id: Int!): Author!
  unionTest: [Result!]!
  posts: [Post!]!
  post(id: Int!): Post!
  comment(id: Int!): Comment!
  human(id: Int!): Human!
}

union Result = Author | Comment

type Mutation {
  addRecipe(newRecipeData: NewRecipeInput!): Recipe!
  removeRecipe(id: String!): Boolean!
  createAuthor(createAuthorInput: CreateAuthorInput!): Author!
  updateAuthor(updateAuthorInput: UpdateAuthorInput!): Author!
  removeAuthor(id: Int!): Author!
  createPost(createPostInput: CreatePostInput!): Post!
  updatePost(updatePostInput: UpdatePostInput!): Post!
  removePost(id: Int!): Post!
  addComment(comment: CreateCommentInput!, postId: Int!): Post!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: Int!): Comment!
  createHuman(createHumanInput: CreateHumanInput!): Human!
  updateHuman(updateHumanInput: UpdateHumanInput!): Human!
  removeHuman(id: Int!): Human!
}

input NewRecipeInput {
  title: String!
  description: String
  ingredients: [String!]!
}

input CreateAuthorInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateAuthorInput {
  id: Int!
}

input CreatePostInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdatePostInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCommentInput {
  content: String!
}

input UpdateCommentInput {
  content: String
  id: Int!
}

input CreateHumanInput {
  name: String!
  favoriteColor: AllowedColor!
}

enum AllowedColor {
  RED
  GREEN
  BLUE
}

input UpdateHumanInput {
  name: String
  favoriteColor: AllowedColor
  id: Int!
}

type Subscription {
  recipeAdded: Recipe!
  commentAdded: Comment!
}
